****A: UNIMODAL PALINDROMIC DECOMPOSITIONS
----361B
#include<bits/stdc++.h>
using namespace std;
int n,dp[255][255];
int main(){
	for(int i=1;i<251;i++) dp[0][i]=1;
	for(int i=1;i<251;i++)
		for(int j=1;j<=251;j++)
			dp[i][j]=dp[i][j-1]+(i-j>=0?dp[i-j][j]:0);
	while(cin>>n){
		if(!n) return 0;
		long long ans=0;
		for(int i=0;i<=n;i++)
			if((n-i)%2==0) ans+=dp[n-i>>1][i?i:n];
		cout<<n<<' '<<ans<<endl;
	}
}


----450B
#include<bits/stdc++.h> 
using namespace std;
long long dp[555][555];
inline long long dfs(int n,int las){
//	printf("n:%d las:%d\n",n,las);
	if(!n)return 1;
	if(dp[n][las])return dp[n][las];
	if(las>n)return 0;
	long long ret=1;
	for(int i=las;i<=n/2;++i)
		ret+=dfs(n-i-i,i);
//	printf("dp[%d][%d]=%d\n",n,las,ret);
	return dp[n][las]=ret;
}
int main()  
{ 
	int n;cin>>n;
	while(n){
		
		cout<<n<<" "<<dfs(n,1)<<endl;
		cin>>n;
	}
	
	return 0;  
}

----453B
#include<iostream>
#include<cstring>
using namespace std;
long long f[255][255];
int N;
int main()
{
	int i,j,k; 
	memset(f,0,sizeof(f));
	for(i=1;i<=250;i++)
	{
		f[i][i] = 1;
		if(i%2==0)
			f[i][i/2]=1;
		for(j=1;i-2*j>=j;j++)  
		{
			for(k=j;i-2*j>=k;k++)
				f[i][j]+=f[i-2*j][k];
		}
	}
   while(cin>>N)
   {
	   	if(N==0) break; 
	   	long long sum = 0;
	   	for(i=1;i<=N;i++)
			sum += f[N][i];
	   	cout<<N<<' '<<sum<<endl;
   }
   return 0;
}

****B: 硬币
----487B
#include<bits/stdc++.h>
using namespace std;
int n,x,a[222],dp[11111],t[11111];
vector<int>V;
int main(){
	scanf("%d%d",&n,&x), dp[0]=1;
	for(int i=0;i<n;i++){
		scanf("%d",a+i);
		for(int j=x;j>=a[i];--j)
			dp[j]+=dp[j-a[i]];
	}
	for(int i=0;i<n;i++){
		memcpy(t,dp,sizeof dp);
		for(int j=a[i];j<=x;++j) t[j]-=t[j-a[i]];
		if(t[x]==0) V.push_back(a[i]);
	}
	sort(V.begin(),V.end());
	printf("%d\n",V.size());
	for(int i=0;i<V.size();i++)
		printf("%d%c",V[i]," \n"[i==V.size()-1]);
}


----555B
#include<iostream>
using namespace std;
int val[210]={0};
int ways[10000]={0};
int ans[210]={0};

int cal(int x,int y){
 if(x<0) return 0;
 return ways[x]-cal(x-y,y);
}

int main(){
 int N,Max;
 cin>>N>>Max;
 for(int i=1;i<=N;++i)
  cin>>val[i];
 ways[0]=1;
 for(int i=1;i<=N;++i)
  for(int j=Max;j>=val[i];--j)
   ways[j]+=ways[j-val[i]];
 int cnt=0;
 for(int i=1;i<=N;++i)
  if(cal(Max,val[i])==0)
   ans[cnt++]=val[i];
 cout<<cnt<<endl;
 if(cnt==0) cout<<' '<<endl; 
 else{
  cout<<ans[0];
  for(int i=1;i<cnt;++i)
   cout<<' '<<ans[i];
 }
 return 0;
}

----555B
#include<iostream>
using namespace std;
int val[210]={0};
int ways[10000]={0};
int ans[210]={0};

int cal(int x,int y){
	if(x<0) return 0;
	return ways[x]-cal(x-y,y);
}

int main(){
	int N,Max;
	cin>>N>>Max;
	for(int i=1;i<=N;++i)
		cin>>val[i];
	ways[0]=1;
	for(int i=1;i<=N;++i)
		for(int j=Max;j>=val[i];--j)
			ways[j]+=ways[j-val[i]];
	int cnt=0;
	for(int i=1;i<=N;++i)
		if(cal(Max,val[i])==0)
			ans[cnt++]=val[i];
	cout<<cnt<<endl;
	if(cnt==0) cout<<' '<<endl; 
	else{
		cout<<ans[0];
		for(int i=1;i<cnt;++i)
			cout<<' '<<ans[i];
	}
	return 0;
}

****C: Charm Bracelet
----249B
#include<iostream>
using namespace std;
int v[13000]={0};
int main()
{
	int N,M;cin>>N>>M;
	int w,d;
	for(int i=0;i<N;i++)
	{
		cin>>w>>d;
		for(int j=M;j>=0;j--)
		{
			if(j+w<=M)
			{
				v[j+w]=max(v[j+w],v[j]+d);
			}
		}
	}
	cout<<v[M]<<endl;
}

----302B
#include<iostream>
using namespace std;

int f[20000];
int main() {
	int n, m, c[20000], w[20000];
	cin >> n >> m;
	for (int i = 1; i <= n; i++)
		cin >> w[i] >> c[i];
	for (int i = 1; i <= n; i++)
		for (int j = m; j >= w[i]; j--)
			f[j] = max(f[j], f[j - w[i]] + c[i]);

	cout << f[m];
	return 0;
}


----319B
#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
int n,m,w[3500],d[3500],ans[13000]={};
int main()
{
	cin>>n>>m;
	for (int i=1;i<=n;++i)
		cin>>w[i]>>d[i];
	for (int i=1;i<=n;++i)
		for (int j=m;j>=0;--j)
			if (j>=w[i])
				ans[j]=max(ans[j],ans[j-w[i]]+d[i]);	
	cout<<ans[m];
	return 0;
} 

****D: 课程大作业
----841B
#include<bits/stdc++.h>
using namespace std;
int T,n,a[99],ddl[99],tim[99],dp[99999],s[99999];
string nam[99];
vector<int>V[99999];
bool che(vector<int>a,vector<int>b){
	int l=a.size();
	for(int i=0;i<l;i++){
		if(a[i]<b[i])return false;
		if(a[i]>b[i])return true;
	}
	return false;
}
int main(){
	scanf("%d",&T);
	while(T--){
		memset(dp,0x3f,sizeof dp);
		cin>>n,dp[0]=0;
		for(int i=0;i<n;i++)
			cin>>nam[i]>>ddl[i]>>tim[i],
			s[1<<i]=tim[i];
		for(int t=1;t<1<<n;t++){
			s[t]=s[t&t-1]+s[t&-t];
			for(int i=0;i<n;i++) if(1&t>>i){
				int fr=t^1<<i,res=dp[fr]+max(0,s[fr]+tim[i]-ddl[i]);
				if(res<dp[t]) dp[t]=res,V[t]=V[fr],V[t].push_back(i);
				if(res==dp[t]){
					auto v=V[fr]; v.push_back(i);
					if(che(V[t],v)) V[t]=v;
				}
			}
		}
		cout<<dp[(1<<n)-1]<<endl;
		for(int i=0;i<n;i++) cout<<nam[V[(1<<n)-1][i]]<<endl;
	}
}


----949B
#include<bits/stdc++.h>
using namespace std;
int dp[1<<16];
int tim[20];
int ddl[20];
int sum[1<<16];
string name[20];
string ans[1<<16];
int score(int a,int b)
{
	return max(0,a-b);
}
int main()
{
	int T;
	scanf("%d",&T);
	while(T--)
	{
		int n;
		scanf("%d",&n);
		for(int i=0;i<n;++i)
		{
			cin>>name[i];
			scanf("%d%d",&ddl[i],&tim[i]);
			sum[1<<i]=tim[i];
		}
		for(int i=1;i<(1<<n);++i)
			for(int j=0;j<n;++j)
				if(i&(1<<j))
					sum[i]=sum[i^(1<<j)]+tim[j];
		dp[0]=0;
		for(int i=0;i<(1<<n);++i)
			ans[i]="";
		for(int i=1;i<(1<<n);++i)
			for(int j=0;j<n;++j)
			{
				if(i&(1<<j)&&(dp[i^(1<<j)]+score(sum[i],ddl[j])<=dp[i]||ans[i]==""))
				{
					if(dp[i^(1<<j)]+score(sum[i],ddl[j])<dp[i]||ans[i^(1<<j)]+name[j]+"\n"<ans[i]||ans[i]=="")
					{
						ans[i]=ans[i^(1<<j)]+name[j]+"\n";
                    }
					dp[i]=dp[i^(1<<j)]+score(sum[i],ddl[j]);
				}
			}
		cout<<dp[(1<<n)-1]<<endl;
		cout<<ans[(1<<n)-1];
	}
	return 0;
}

----1009B
#include<bits/stdc++.h>
using namespace std;
const int maxn=1<<16;//number of states
int ddl[16];
int timeCost[16];
string name[16];
int dp[maxn];//minimum time cost of state i
int sumtime[maxn];
string ans[maxn];//answer string of homework
inline int deduct(int a, int b) 
{
	return max(0,a-b);
}
int main()
{
	int num_case;
	cin>>num_case;
	while(num_case--)
	{
		int n,s,d,c;
		cin>>n;
		int bn=1<<n;
		for(int i=0;i<n;i++)
		{
			cin>>name[i]>>ddl[i]>>timeCost[i];
			for(int j=1;j<bn;j++)
			{
				if(j&(1<<i)) sumtime[j]=sumtime[j^(1<<i)] + timeCost[i];
			}	
		}
		for(int i=0;i<bn;i++) ans[i]="";
		for(int i=1;i<bn;i++){
			for(int j=0;j<n;j++){
				if(i&(1<<j)&&(dp[i^(1<<j)]+deduct(sumtime[i],ddl[j])<=dp[i]||ans[i]=="")){
					if(dp[i^(1<<j)]+deduct(sumtime[i],ddl[j])<dp[i]||ans[i]==""||ans[i^(1<<j)]+name[j]+"\n"<ans[i]){
						dp[i]=dp[i^(1<<j)]+deduct(sumtime[i],ddl[j]);
						ans[i]=ans[i^(1<<j)]+name[j]+"\n";
					}
				}
			}
		}
		cout<<dp[bn-1]<<endl;
		cout<<ans[bn-1];
	}
	return 0;
}

